// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThesuarusAPI.Data;

namespace ThesuarusAPI.Migrations
{
    [DbContext(typeof(ThesaurusContext))]
    [Migration("20191001081144_Iteration_1")]
    partial class Iteration_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0");

            modelBuilder.Entity("ThesuarusAPI.Models.SynonymGroup", b =>
                {
                    b.Property<int>("SynonymGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("SynonymGroupID");

                    b.ToTable("SynonymGroups");
                });

            modelBuilder.Entity("ThesuarusAPI.Models.Word", b =>
                {
                    b.Property<int>("WordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Characters")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SynonymGroupID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WordID");

                    b.HasIndex("SynonymGroupID");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("ThesuarusAPI.Models.Word", b =>
                {
                    b.HasOne("ThesuarusAPI.Models.SynonymGroup", "SynonymGroup")
                        .WithMany("Words")
                        .HasForeignKey("SynonymGroupID")
                        .OnDelete(DeleteBehavior.NoAction);
                });
#pragma warning restore 612, 618
        }
    }
}
